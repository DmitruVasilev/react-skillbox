/*
* 1. Виды вызовов компонентов
*
* Классовый React.Component и React.PureComponent
* при изменение пропсов или состояния происходит ререндер, при этом вызывается
* шудкомпонентапдейт, который проверяет пропсы и состояния , и решает обновлять или нет компонент
* при этом есть особенность для дочерних компонентов, они обновляются всегда
* если он не PureComponent или не React.memo
*
* функциональный func = () => <></>
* React.memo(func = () => <></>)
*  */

/*
* 2. Состояния в классах
*
* Напрямую состояние менять нельзя, нужно использовать setState(newState, callback)
* запись через функцию даёт 100% результат, что используется текущий state, также
* можно вторым аргументом использовать обратный вызов, после изменения состояния.
* при вызове нескольких setState, react помещает их в очередь и группирует (батчинг)
*
* Использовать дженерик Readonly
*
*  */

/*
* 3. Состояния в функциях ( useState || хук )
*
* Можно использовать только в функциях.
* const [state, setState] = React.useState(initialState)
*
*  */

/*
* 5урок разбиение макета
*
*
*
*  */
